{"version":3,"sources":["app.js"],"names":["vGame","Vue","el","data","turn","ready","setTurn","methods","player","console","log","otherTurn","currentPlayer","database","firebase","writePlayerData","playerId","move","ref","set","gameMoveUpdate","on","snapshot","lastMove","val","App","updateMove","gameTurnUpdate","player1Turn","document","addEventListener","init","setupElements","bindEvents","window","$","$column","playerTurn","$playerTurnCounter","$startOver","$game","clearData","dropPiece","e","div","attr","find","removeClass","addClass","dropDiv","waitTurn","event","winConditions"],"mappings":"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","file":"app.js","sourcesContent":["\n/* I should really move this VUE and FIREBASE stuff into my JS object but we'll see if I have time */\n\n/* ------------\nVUE \n------------ */\n/* just messing around with view to update the turn indicator */\nlet vGame = new Vue({\n\tel: '#player-turn-counter',\n\tdata: {\n\t\tturn: '1'\n\t},\n\tready: function() {\n\t\tthis.setTurn();\n\t},\n\tmethods: {\n\t\tsetTurn: function(player) {\n\t\t\tif(player == 'active' || player == '') {\n\t\t\t\tthis.turn = 1;\n\t\t\t} else {\n\t\t\t\tthis.turn = 2;\n\t\t\t}\n\n\t\t\tconsole.log(`turn = ${this.turn}`);\n\t\t}\n\t}\n});\n\n/* set a variable so we can change to active or inactive turn and clear out the last move */\nlet otherTurn;\nif (currentPlayer == 1) {\n\totherTurn = 2;\n} else {\n\totherTurn = 1;\n}\n\n\n/* ------------\nFIREBASE \n------------ */\nlet database = firebase.database();\n\n/* write each players' move to the database */\nfunction writePlayerData(playerId, move, turn) {\n\tfirebase.database().ref(`players/${playerId}`).set({\n\t\tmove: move,\n\t\tturn: turn\n\t});\n}\n\n/* listen for changes and return move */\nlet gameMoveUpdate = firebase.database().ref(`players/player${otherTurn}/move`);\ngameMoveUpdate.on('value', function(snapshot) {\n\tlet lastMove = snapshot.val();\n\tconsole.log(`watch for val change = ${lastMove}`);\n\n\t/* update the game board */\n\tApp.updateMove(lastMove);\n});\n\nlet gameTurnUpdate = firebase.database().ref(`players/player1/turn`);\ngameTurnUpdate.on('value', function(snapshot) {\n\tlet player1Turn = snapshot.val();\n\tconsole.log(`watch for turn change = ${player1Turn}`);\n\n\t/* also update the turn counter */\n\tvGame.setTurn(player1Turn);\n});\n\n\n/* ------------\nJS OBJECT \n------------ */\ndocument.addEventListener('DOMContentLoaded', function() {\n\tvar App = {\n\t\tinit: function() {\n\t\t\tthis.setupElements();\n\t\t\tthis.bindEvents();\n\t\t},\n\t\tsetupElements: function(){\n\t\t\tthis.window = $(window);\n\t\t\tthis.$column = $('article');\n\t\t\tthis.playerTurn = 0;\n\t\t\tthis.$playerTurnCounter = $('#player-turn-counter');\n\t\t\tthis.$startOver = $('#start-over');\n\t\t\tthis.$game = $('#connect-four-game');\n\t\t},\n\t\tbindEvents: function() {\n\t\t\tApp.window.on('load', App.clearData);\n\t\t\tApp.$column.on('click', App.dropPiece);\n\t\t\tApp.$startOver.on('click', App.clearData);\n\t\t},\n\t\tclearData: function() {\n\t\t\t/* start by making sure our firebase data is clean */\n\t\t\twritePlayerData(`player1`, '', '');\n\t\t\twritePlayerData(`player2`, '', '');\n\t\t},\n\t\tdropPiece: function(e, div) {\n\t\t\tconsole.log($(this).attr('id'));\n\t\t\t/* drop game piece drop to first open spot */\t\t\n\t\t\t$(this).find('div.open:last').removeClass('open').addClass(`turn-${currentPlayer}`);\t\t\n\n\t\t\tlet dropDiv = $(this).attr('id')\n\n\t\t\t/* update firebase with clicked selector */\n\t\t\twritePlayerData(`player${currentPlayer}`, `#player${otherTurn} #${dropDiv}`, 'inactive');\n\t\t\twritePlayerData(`player${otherTurn}`, '', 'active');\n \n\t\t\t/* set player turn after we've made a move */\n\t\t\tApp.waitTurn('wait');\n\t\t},\n\t\tupdateMove: function(div) {\n\t\t\tif(div) {\n\t\t\t\tconsole.log(`data has been updated = ${div}`);\n\t\t\t\t$(div).find('div.open:last').removeClass('open').addClass(`turn-${otherTurn}`);\n\t\t\t\tApp.waitTurn('clear');\n\t\t\t}\n\t\t},\n\t\twaitTurn: function(event) {\n\t\t\t/* set up some indicator that we have to wait our turn - maybe add class and use pseudo class content to declare \"wait\" */\n\t\t\tif(event == 'wait') {\n\t\t\t\tconsole.log('wait for the other player');\n\t\t\t\tApp.$game.addClass('wait');\n\t\t\t} else if (event == 'clear') {\n\t\t\t\tconsole.log('your turn');\n\t\t\t\tApp.$game.removeClass('wait');\n\t\t\t}\n\t\t},\n\t\twinConditions: function() {\n\t\t\tconsole.log('check win conditions');\n\n\t\t\t/* look for winning combos and stop game */\t\n\t\t\t/* DIDN'T GET TO THE LOGIC PART YET */\n\t\t}\n\t};\n\tApp.init();\n\twindow.App = App;\n});\n"]}